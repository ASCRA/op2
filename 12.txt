Oznaka predmeta: OP2
Predavanje broj: 12
Nastavna jedinica: JAVA
Nastavne teme:
JavaFX Menu. JavaFX: ToggleButton. JavaFX: ComboBox, ChoiceBox.
JavaFX: ColorPicker. JavaFX: PasswordField. JavaFX crtanje. JavaFX: Poziv
"dijaloga". JavaFX: CrollPane, Image. JavaFX: TabPane. JavaFX: Spinner.
JavaFX: TreeView. JavaFX: ListView. JavaFX: Media. JavaFX: TableView
(add,edit,delete). JavaFX project.
Predavač: prof. dr Perica S. Štrbac, dipl. ing.
Literatura:
Eckel B., Thinking in Java, 2nd edition, Prentice-Hall, New Jersey 2000.
Cay S. Horstmann and Gary Cornell: "Core Java, Advanced
Features", Vol. 2, Prantice Hall, 2013.
The Java Tutorial, Sun Microsystems 2001. http://java.sun.com
Branko Milosavljević, Vidaković М, Java i Internet programiranje, GInT,
Novi Sad 2002.
OBJEKTNO PROGRAMIRANJE 2
JavaFX: Menu
//napisano da se vidi gde je sta smesteno
import javafx.application.Application;
import javafx.application.Platform;
import javafx.event.ActionEvent; import javafx.event.EventHandler;
import javafx.scene.Scene;
import javafx.scene.control.CheckMenuItem;
import javafx.scene.control.ContextMenu;
import javafx.scene.control.CustomMenuItem;
import javafx.scene.control.Menu;
import javafx.scene.control.MenuBar;
import javafx.scene.control.MenuItem;
import javafx.scene.control.RadioMenuItem;
import javafx.scene.control.SeparatorMenuItem;
import javafx.scene.control.Slider;
import javafx.scene.control.TextField;
import javafx.scene.control.ToggleGroup;
import javafx.scene.input.ContextMenuEvent;
import javafx.scene.input.KeyCode;
import javafx.scene.input.KeyCodeCombination;
import javafx.scene.input.KeyCombination;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.BorderPane;
import javafx.scene.paint.Color; import javafx.stage.Stage;
Predavanje br. 12 2
JavaFX: Menu
public class Menu1 extends Application {
@Override
public void start(Stage primaryStage) {
BorderPane root = new BorderPane();
Scene scene = new Scene(root, 300, 250, Color.WHITE);
MenuBar menuBar = new MenuBar();
menuBar.prefWidthProperty().bind(primaryStage.widthProperty());
root.setTop(menuBar);
// File menu - new, save, exit
Menu fileMenu = new Menu("_File");
fileMenu.setMnemonicParsing(true);
MenuItem newMenuItem = new MenuItem("New");
MenuItem saveMenuItem = new MenuItem("Save");
saveMenuItem.setAccelerator(
new KeyCodeCombination(KeyCode.S, KeyCombination.SHORTCUT_DOWN));
//CONTROL_DOWN or META_DOWN
saveMenuItem.setOnAction(e->{
MessageBox.show("Snimanje", "Snimanje");});
MenuItem exitMenuItem = new MenuItem("Exit");
exitMenuItem.setOnAction(actionEvent -> Platform.exit());
Slider slider = new Slider();
CustomMenuItem customMenuItem = new CustomMenuItem(slider);
customMenuItem.setHideOnClick(false);
Predavanje br. 12 3
JavaFX: Menu
customMenuItem.setOnAction(e-> {
MessageBox.show(""+slider.getValue(), "Vrednost klizaca"); } );
fileMenu.getItems().addAll(newMenuItem, saveMenuItem,
new SeparatorMenuItem(), exitMenuItem, new SeparatorMenuItem(),
customMenuItem);
Menu webMenu = new Menu("Web");
CheckMenuItem htmlMenuItem = new CheckMenuItem("HTML");
htmlMenuItem.setSelected(true);
webMenu.getItems().add(htmlMenuItem);
CheckMenuItem cssMenuItem = new CheckMenuItem("CSS");
cssMenuItem.setSelected(true);
webMenu.getItems().add(cssMenuItem);
Menu sqlMenu = new Menu("SQL");
ToggleGroup tGroup = new ToggleGroup();
RadioMenuItem mysqlItem = new RadioMenuItem("MySQL");
mysqlItem.setToggleGroup(tGroup);
RadioMenuItem oracleItem = new RadioMenuItem("Oracle");
oracleItem.setToggleGroup(tGroup);
oracleItem.setSelected(true);
oracleItem.setOnAction(e-> {MessageBox.show("ORACLE","ORACLE");});
sqlMenu.getItems().addAll(
mysqlItem, oracleItem,
new SeparatorMenuItem()); Predavanje br. 12 4
JavaFX: Menu
Menu tutorialSubMenu = new Menu("Tutorial");
tutorialSubMenu.getItems().addAll(
new CheckMenuItem("Java"),
new CheckMenuItem("JavaFX"),
new CheckMenuItem("Swing"));
sqlMenu.getItems().add(tutorialSubMenu);
menuBar.getMenus().addAll(fileMenu, webMenu, sqlMenu);
MenuItem itemAbout = new MenuItem("About");
itemAbout.setOnAction(new EventHandler<ActionEvent>() {
public void handle(ActionEvent e) {
MessageBox.show("About", "About");
}
});
ContextMenu contextMenu = new ContextMenu(itemAbout);
root.addEventHandler(
ContextMenuEvent.CONTEXT_MENU_REQUESTED, event -> {
contextMenu.show(root, event.getScreenX(), event.getScreenY());
event.consume();
});
root.addEventHandler(MouseEvent.MOUSE_PRESSED, event -> {
contextMenu.hide();
});
Predavanje br. 12 5
JavaFX: Menu
MenuItem itemAboutC = new MenuItem("About C");
itemAboutC.setOnAction(new EventHandler<ActionEvent>() {
public void handle(ActionEvent e) {
MessageBox.show("About C", "About C");
}
});
TextField tf = new TextField();
tf.setPromptText("Pritisnite kontra taster");
ContextMenu contextMenuC = new ContextMenu(itemAboutC);
//contextMenuC.show(tf, Side.BOTTOM, dx, dy);//moze u f-iji
tf.setContextMenu(contextMenuC);
root.setCenter(tf);
TextField tf2 = new TextField("hm");
root.setBottom(tf2);
primaryStage.setScene(scene);
primaryStage.show();
}
public static void main(String[] args) { launch(args); }
}
Predavanje br. 12 6
JavaFX: Menu
Predavanje br. 12 7
JavaFX: ToggleButton
import javafx.application.Application;
import javafx.beans.value.ChangeListener;
import javafx.beans.value.ObservableValue;
import javafx.geometry.Insets;import javafx.scene.Group;
import javafx.scene.Scene;import javafx.scene.control.Label;
import javafx.scene.control.Toggle;
import javafx.scene.control.ToggleButton;
import javafx.scene.control.ToggleGroup;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox; import javafx.scene.paint.Color;
import javafx.scene.shape.Rectangle; import javafx.stage.Stage;
public class ToggleButtonSample extends Application {
Rectangle rect = new Rectangle(145, 50);
private static final Label label = new Label ("Priority:");
public static void main(String[] args) { launch(args); }
@Override
public void start(Stage stage) {
Scene scene = new Scene(new Group());
stage.setTitle("Toggle Button Sample");
stage.setWidth(250); stage.setHeight(180);
rect.setFill(Color.WHITE); rect.setStroke(Color.DARKGRAY);
rect.setStrokeWidth(2);
Predavanje br. 12 8
JavaFX: ToggleButton
final ToggleGroup group = new ToggleGroup();
group.selectedToggleProperty().addListener(
new ChangeListener<Toggle>(){
public void changed(ObservableValue<? extends Toggle> ov,
Toggle toggle, Toggle new_toggle) {
if (new_toggle == null) rect.setFill(Color.WHITE);
else rect.setFill(
(Color) group.getSelectedToggle().getUserData() );
}
});
ToggleButton tb1 = new ToggleButton("Minor");
tb1.setToggleGroup(group);
tb1.setUserData(Color.LIGHTGREEN);
tb1.setSelected(true);
tb1.setStyle("-fx-base: lightgreen;");
ToggleButton tb2 = new ToggleButton("Major");
tb2.setToggleGroup(group);
tb2.setUserData(Color.LIGHTBLUE);
tb2.setStyle("-fx-base: lightblue;");
ToggleButton tb3 = new ToggleButton("Critical");
tb3.setToggleGroup(group);
tb3.setUserData(Color.SALMON);
tb3.setStyle("-fx-base: salmon;");
Predavanje br. 12 9
JavaFX: ToggleButton
HBox hbox = new HBox();
hbox.getChildren().add(tb1);
hbox.getChildren().add(tb2);
hbox.getChildren().add(tb3);
rect.setArcHeight(10);
rect.setArcWidth(10);
VBox vbox = new VBox();
vbox.getChildren().add(label);
vbox.getChildren().add(hbox);
vbox.getChildren().add(rect);
vbox.setPadding(new Insets(20, 10, 10, 20));
((Group) scene.getRoot()).getChildren().add(vbox);
stage.setScene(scene);
stage.show();
}
}
Predavanje br. 12 10
JavaFX: ColorPicker
import javafx.application.Application; import javafx.event.*;
import javafx.scene.Scene; import javafx.scene.control.ColorPicker;
import javafx.geometry.Insets; import javafx.scene.layout.HBox;
import javafx.scene.paint.Color; import javafx.scene.text.*;
import javafx.stage.Stage;
public class ColorPickerSample extends Application {
public static void main(String[] args) { launch(args); }
@Override public void start(Stage stage) {
stage.setTitle("ColorPicker");
Scene scene = new Scene(new HBox(20),400,100);
HBox box = (HBox)scene.getRoot();
box.setPadding(new Insets(5));
final ColorPicker colorPicker = new ColorPicker();
colorPicker.setValue(Color.CORAL);
final Text text = new Text("Try the color picker!");
text.setFont(Font.font ("Verdana", 20));
text.setFill(colorPicker.getValue());
colorPicker.setOnAction(e->{text.setFill(colorPicker.getValue());});
box.getChildren().addAll(colorPicker, text);
stage.setScene(scene); stage.show();
}
}//final: method, class, primitive_var, parameter, blank_var, static blank_var, reference
Predavanje br. 12 11
JavaFX: ComboBox, ChoiceBox
import javafx.scene.shape.Rectangle;
import javafx.application.Application;
import javafx.beans.value.ChangeListener;
import javafx.beans.value.ObservableValue;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.geometry.Insets;
import javafx.scene.Cursor;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.ChoiceBox;
import javafx.scene.control.ComboBox;
import javafx.scene.control.ContentDisplay;
import javafx.scene.control.Label;
import javafx.scene.control.ListCell;
import javafx.scene.control.ListView;
import javafx.scene.layout.GridPane;
import javafx.scene.paint.Color;
import javafx.stage.Stage;
import javafx.util.Callback;
import javafx.scene.control.Tooltip;
Predavanje br. 12 12
JavaFX: ComboBox, ChoiceBox
public class Combo extends Application {
ObservableList cursors = FXCollections.observableArrayList(
Cursor.DEFAULT, Cursor.CROSSHAIR, Cursor.WAIT,
Cursor.TEXT, Cursor.HAND, Cursor.MOVE, Cursor.N_RESIZE,
Cursor.NE_RESIZE, Cursor.E_RESIZE, Cursor.SE_RESIZE,
Cursor.S_RESIZE, Cursor.SW_RESIZE, Cursor.W_RESIZE,
Cursor.NW_RESIZE, Cursor.NONE);
public static void main(String[] args) {Application.launch(args); }
@Override
public void start(Stage stage) {
stage.setTitle("ComboBoxSample");
Scene scene = new Scene(new Group(), 450, 250);
scene.setFill(Color.ALICEBLUE);
ComboBox carComboBox = new ComboBox();
carComboBox.getItems().addAll("Porsche", "Mercedes", "Audi");
carComboBox.setEditable(true);
carComboBox.setValue("Porsche"); //za null nema podrazumevanog. aut.
carComboBox.valueProperty().addListener(
new ChangeListener<String>() {
@Override
public void changed(ObservableValue ov, String t, String t1) {
System.out.println(ov); System.out.println(t);
System.out.println(t1);} });
Predavanje br. 12 13
JavaFX: ComboBox, ChoiceBox
Button provera = new Button("Provera izbora");
provera.setOnAction(e -> {
MessageBox.show("" + carComboBox.getValue() , "Provera");
});
ChoiceBox choiceBox = new ChoiceBox<Cursor>(cursors);
choiceBox.setValue(Cursor.DEFAULT);
Label label = new Label("Hello");
label.setStyle("-fx-font: 25 arial;");
final String[] greetings = new String[] {
"Hello", "Hola", "Ciao", "Sawubona" };
final ChoiceBox prevod = new ChoiceBox
(FXCollections.observableArrayList(
"English", "Espanol", "Italian", "Zulu"));
prevod.setValue("English");
prevod.setTooltip(new Tooltip("Select the language"));
prevod.getSelectionModel().selectedIndexProperty().addListener(
new ChangeListener<Number>() {
public void changed(
ObservableValue ov, Number value, Number new_value) {
label.setText(greetings[new_value.intValue()]);
}
});
Predavanje br. 12 14
JavaFX: ComboBox, ChoiceBox
GridPane grid = new GridPane();
grid.setVgap(4);
grid.setHgap(10);
grid.setPadding(new Insets(5));
grid.add(new Label("To: "), 0, 0);
grid.add(carComboBox, 1, 0);
grid.add(provera , 2, 0, 2, 2);
grid.add(choiceBox, 0, 2);
grid.add(prevod, 0, 3);
grid.add(label, 1, 3);
Group root = (Group) scene.getRoot();
root.getChildren().add(grid);
stage.setScene(scene);
stage.show();
scene.cursorProperty().bind(
choiceBox.getSelectionModel().selectedItemProperty());
}
}
Predavanje br. 12 15
JavaFX: ComboBox, ChoiceBox
Predavanje br. 12 16
JavaFX: ComboBox, ChoiceBox
ObjectProperty [bean: ComboBox@31fe1e14[styleClass=combo-box-base combo-box], name:
value, value: Audi]
Mercedes
Audi
Predavanje br. 12 17
JavaFX: PasswordField
import javafx.application.Application;
import javafx.geometry.Insets; import javafx.geometry.Pos;
import javafx.scene.Group; import javafx.scene.Scene;
import javafx.scene.control.Label;
import javafx.scene.control.PasswordField;
import javafx.scene.layout.HBox; import javafx.scene.layout.VBox;
import javafx.scene.paint.Color; import javafx.stage.Stage;
public class Password extends Application {
final Label message = new Label("");
@Override
public void start(Stage stage) {
Group root = new Group();
Scene scene = new Scene(root, 260, 80);
stage.setScene(scene);
stage.setTitle("Password Field Sample");
VBox vb = new VBox();
vb.setPadding(new Insets(10, 0, 0, 10));
vb.setSpacing(10);
HBox hb = new HBox();
hb.setSpacing(10);
hb.setAlignment(Pos.CENTER_LEFT);
Label label = new Label("Password");
final PasswordField pb = new PasswordField();
Predavanje br. 12 18
JavaFX: PasswordField
pb.setOnAction(e->{
if (!pb.getText().equals("abcde")) {
message.setText("Your password is incorrect!");
message.setTextFill(Color.web("red"));
} else {
message.setText("Your password has been confirmed");
message.setTextFill(Color.web("black"));
}
pb.setText("");
});
hb.getChildren().addAll(label, pb);
vb.getChildren().addAll(hb, message);
scene.setRoot(vb); stage.show();
}
public static void main(String[] args) { launch(args); }
}
Predavanje br. 12 19
JavaFX: Crtanje
import javafx.application.Application; import javafx.scene.Group;
import javafx.scene.Scene; import javafx.scene.effect.DropShadow;
import javafx.scene.paint.Color; import javafx.scene.shape.Circle;
import javafx.scene.shape.Ellipse; import javafx.stage.Stage;
public class CirclePrimer extends Application {
public static void main(String[] args) { launch(args); }
public void start(Stage primaryStage) {
Group root = new Group();
Scene scene = new Scene(root, 200, 250, Color.WHITE);
DropShadow ds = new DropShadow();
ds.setOffsetX(4.0); ds.setOffsetY(4.0);
ds.setColor(Color.color(0.0, 0.4, 0.4)); //cyan
Circle c = new Circle();
c.setEffect(ds);c.setCenterX(50.0);c.setCenterY(125.0);
c.setRadius(30.0); c.setFill(Color.RED); c.setCache(true);
Ellipse e = new Ellipse();
e.setCenterX(50.0f); e.setCenterY(50.0f); e.setRadiusX(50.0f);
e.setRadiusY(25.0f); e.setFill(Color.YELLOW);
e.setStroke(Color.BLACK); e.setStrokeWidth(5); e.setEffect(ds);
root.getChildren().addAll(c, e);
primaryStage.setScene(scene); primaryStage.show();
}
}
Predavanje br. 12 20
JavaFX: Poziv "dijaloga"
import javafx.application.Application;import javafx.scene.Group;
import javafx.scene.Scene;import javafx.scene.paint.Color;
import javafx.scene.shape.Circle; import javafx.stage.Stage;
public class CallDialog extends Application {
public static void main(String[] args) { launch(args); }
public void start(final Stage primaryStage) {
primaryStage.setTitle("Dialog");
Group root = new Group();
Scene scene = new Scene(root, 400, 300, Color.WHITE);
Circle c = new Circle();
c.setCenterX(200); c.setCenterY(200); c.setRadius(90);
c.setFill(Color.GREEN); c.setStroke(Color.BLACK);
root.getChildren().add(c);
primaryStage.setScene(scene);
primaryStage.show();
Stage myDialog = new MyDialog(primaryStage);
myDialog.sizeToScene();
myDialog.show();
}
}
Predavanje br. 12 21
JavaFX: Poziv "dijaloga"
import javafx.geometry.HPos;import javafx.geometry.Insets;
import javafx.scene.Group;import javafx.scene.Scene;
import javafx.scene.control.Button;import javafx.scene.control.Label;
import javafx.scene.control.PasswordField;
import javafx.scene.control.TextField;
import javafx.scene.layout.GridPane;import javafx.scene.paint.Color;
import javafx.stage.Stage;
class MyDialog extends Stage {
public MyDialog(Stage owner) {
super();
initOwner(owner);
setTitle("title");
setOpacity(.80);
Group root = new Group();
Scene scene = new Scene(root, 250, 150, Color.WHITE);
setScene(scene);
GridPane gridpane = new GridPane();
gridpane.setPadding(new Insets(5));
gridpane.setHgap(5);
gridpane.setVgap(5);
Label userNameLbl = new Label("User Name: ");
gridpane.add(userNameLbl, 0, 1);
Predavanje br. 12 22
JavaFX: Poziv "dijaloga"
Label passwordLbl = new Label("Password: ");
gridpane.add(passwordLbl, 0, 2);
final TextField userNameFld = new TextField("Admin");
gridpane.add(userNameFld, 1, 1);
final PasswordField passwordFld = new PasswordField();
passwordFld.setText("password");
gridpane.add(passwordFld, 1, 2);
Button login = new Button("Change");
login.setOnAction(e-> {close();});
gridpane.add(login, 1, 3);
GridPane.setHalignment(login, HPos.RIGHT);
root.getChildren().add(gridpane);
}
}
Predavanje br. 12 23
JavaFX: ScrollPane, Image
import java.io.File; import javafx.application.Application;
import javafx.scene.Scene; import javafx.scene.control.ScrollPane;
import javafx.scene.image.Image; import javafx.scene.image.ImageView;
import javafx.scene.layout.HBox; import javafx.scene.paint.Color;
import javafx.scene.shape.Circle; import javafx.stage.Stage;
public class ScrollPanePrimer_1 extends Application {
@Override public void start(Stage stage) { HBox root = new HBox();
Scene scene = new Scene(root, 300, 200); stage.setScene(scene);
Circle circle = new Circle(200, 200,100, Color.RED);
ScrollPane s1 = new ScrollPane(); s1.setMinSize(120,120);
s1.setMaxSize(120,120); s1.setContent(circle);
final ImageView imageview=new ImageView();
Image image1 = new Image(
new File("elvis.jpg").toURI().toString(),
300,300,false,false);
//uri,requested width,requested height,
//preserve aspect ratio, smooth
imageview.setImage(image1);
ScrollPane scrolpane2 = new ScrollPane();
scrolpane2.setPrefSize(150,200);
scrolpane2.setContent(imageview);//scrollPane2.setVvalue(scrollPane2.getVmax());
root.getChildren().addAll(s1, scrolpane2); stage.show(); }
public static void main(String[] args) { launch(args); } }
Predavanje br. 12 24
JavaFX: TabPane
import javafx.application.Application; import javafx.geometry.Pos;
import javafx.scene.Group; import javafx.scene.Scene;
import javafx.scene.control.Label; import javafx.scene.control.Tab;
import javafx.scene.control.TabPane;
import javafx.scene.layout.BorderPane; import javafx.scene.layout.HBox;
import javafx.scene.paint.Color; import javafx.stage.Stage;
public class TabPanePrimer extends Application {
public static void main(String[] args) { launch(args); }
@Override public void start(Stage primaryStage) {
primaryStage.setTitle("Tabs");
Group root = new Group();
Scene scene=new Scene(root,200,100,Color.WHITE);
TabPane tabPane = new TabPane();
BorderPane borderPane = new BorderPane();
for (int i = 0; i < 5; i++) { Tab tab=new Tab(); tab.setText("Tab"+i);
HBox hbox = new HBox(); hbox.getChildren().add(new Label("Tab" + i));
hbox.setAlignment(Pos.CENTER); tab.setContent(hbox);
tabPane.getTabs().add(tab);
}
borderPane.prefHeightProperty().bind(scene.heightProperty());
borderPane.prefWidthProperty().bind(scene.widthProperty());
borderPane.setCenter(tabPane); root.getChildren().add(borderPane);
primaryStage.setScene(scene); primaryStage.show(); } }
Predavanje br. 12 25
JavaFX: Spinner
import javafx.application.Application;import javafx.geometry.Insets;
import javafx.scene.Scene;import javafx.scene.control.Label;
import javafx.scene.control.Spinner;
import javafx.scene.control.SpinnerValueFactory;
import javafx.scene.layout.GridPane;import javafx.stage.Stage;
public class SpinnerPrimer extends Application {
public static void main(String[] args) { launch(args); }
@Override public void start(Stage stage) {
Label lab = new Label("5");
final Spinner spinner = new Spinner();
spinner.setValueFactory(
new SpinnerValueFactory.IntegerSpinnerValueFactory(0, 10));
spinner.getValueFactory().setValue(Integer.parseInt("5"));
//ili setValue(5)
spinner.getEditor().textProperty().addListener(
(observable, oldValue, newValue) -> { lab.setText(""+newValue);});
GridPane grid = new GridPane(); grid.setHgap(10); grid.setVgap(10);
grid.setPadding(new Insets(10));
grid.add(new Label("Spinner:"), 0, 0);
grid.add(spinner, 1, 0);
grid.add(lab, 0, 5);
Scene scene = new Scene(grid, 350, 300);
stage.setTitle("Spinner");stage.setScene(scene);stage.show(); }}
Predavanje br. 12 26
JavaFX: Media
import java.io.File; import javafx.application.Application;
import javafx.beans.binding.Bindings;
import javafx.beans.property.DoubleProperty;
import javafx.scene.Scene; import javafx.scene.layout.StackPane;
import javafx.scene.media.Media; import javafx.scene.media.MediaPlayer;
import javafx.scene.media.MediaView; import javafx.scene.paint.Color;
import javafx.stage.Stage;
public class MediaPlayerPrimer extends Application {
public static void main(String[] args) { launch(args); }
@Override public void start(Stage primaryStage) {
final File f = new
File("C:/video/trailer.mp4");
final Media m = new Media(f.toURI().toString());
final MediaPlayer mp = new MediaPlayer(m);
final MediaView mv = new MediaView(mp);
final DoubleProperty width = mv.fitWidthProperty();
final DoubleProperty height = mv.fitHeightProperty();
width.bind(Bindings.selectDouble(mv.sceneProperty(), "width"));
height.bind(Bindings.selectDouble(mv.sceneProperty(), "height"));
mv.setPreserveRatio(true);
StackPane root = new StackPane();
root.getChildren().add(mv);
Predavanje br. 12 27
JavaFX: Media
final Scene scene = new Scene(root, 960, 540);
scene.setFill(Color.BLACK);
primaryStage.setScene(scene);
primaryStage.setTitle("Full Screen Video Player");
primaryStage.setFullScreen(true);
primaryStage.show();
mp.play();
}
}
Predavanje br. 12 28
import javafx.application.*; import javafx.stage.*;
import javafx.scene.*; import javafx.scene.layout.*;
import javafx.scene.control.*; import javafx.geometry.*;
public class Mercedes extends Application {
public static void main(String[] args){ launch(args); }
TreeView<String> tree;
Label lblShowName;
@Override public void start(Stage primaryStage) {
TreeItem<String> root, csegment, bsegment,
suvsegment, mercedesc, mercedese;
root = new TreeItem<String>("MERCEDES");
root.setExpanded(true);
csegment = makeShow("C SEGMENT", root);
makeShow("A180", csegment);
makeShow("A250", csegment);
bsegment = makeShow("D SEGMENT", root);
mercedesc = makeShow("Mercedes C", bsegment);
makeShow("C 250", mercedesc);
mercedese = makeShow("Mercedes CLA", bsegment);
makeShow("CLA220", mercedese);
makeShow("Electric 1", bsegment);
makeShow("Electric 2", bsegment);
suvsegment = makeShow("SEGMENT SUV", root);
JavaFX: TreeView
Predavanje br. 12 29
JavaFX: TreeView
makeShow("ML250", suvsegment);
makeShow("ML280", suvsegment);
makeShow("GLE", suvsegment);
tree = new TreeView<String>(root);
tree.setShowRoot(true);
tree.getSelectionModel().selectedItemProperty()
.addListener( (v, oldValue, newValue) ->
tree_SelectionChanged(newValue) );
lblShowName = new Label();
VBox pane = new VBox(10);
pane.setPadding(new Insets(20,20,20,20));
pane.getChildren().addAll(tree, lblShowName);
Scene scene = new Scene(pane);
primaryStage.setScene(scene);
primaryStage.setTitle("MERCEDES");
primaryStage.show();
}
public TreeItem<String> makeShow(String title, TreeItem<String> parent){
TreeItem<String> show = new TreeItem<String>(title);
show.setExpanded(true);
parent.getChildren().add(show);
return show;
}
Predavanje br. 12 30
JavaFX: TreeView
public void tree_SelectionChanged(TreeItem<String> item){
if (item != null){
lblShowName.setText(item.getValue());
}
}
}
Predavanje br. 12 31
JavaFX: ListView
import javafx.application.Application;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.HPos;
import javafx.geometry.Insets;
import javafx.geometry.VPos;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.ListView;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.stage.Stage;
public class ListViewPrimer extends Application {
public static void main(String[] args) {
Application.launch(args);
}
Predavanje br. 12 32
JavaFX: ListView
@Override public void start(Stage primaryStage) {
primaryStage.setTitle("ObservableLists");
Group root = new Group();
Scene scene = new Scene(root, 400, 250, Color.WHITE);
GridPane gridpane = new GridPane();
gridpane.setPadding(new Insets(5));
gridpane.setHgap(10);
gridpane.setVgap(10);
Label candidatesLbl = new Label("Left");
GridPane.setHalignment(candidatesLbl, HPos.CENTER);
gridpane.add(candidatesLbl, 0, 0);
Label heroesLbl = new Label("Right");
gridpane.add(heroesLbl, 2, 0);
GridPane.setHalignment(heroesLbl, HPos.CENTER);
final ObservableList<String> lefts =
FXCollections.observableArrayList("A","B","C");
final ListView<String> leftListView =
new ListView<String>(lefts);
leftListView.setPrefWidth(150);
leftListView.setPrefHeight(150);
gridpane.add(leftListView, 0, 1);
final ObservableList<String> rights =
FXCollections.observableArrayList();
Predavanje br. 12 33
JavaFX: ListView
final ListView<String> rightListView =
new ListView<String>(rights);
rightListView.setPrefWidth(150);
rightListView.setPrefHeight(150);
gridpane.add(rightListView, 2, 1);
Button sendRightButton = new Button(">");
sendRightButton.setOnAction(new EventHandler<ActionEvent>() {
public void handle(ActionEvent event) {
String item =
leftListView.getSelectionModel().getSelectedItem();
if (item != null) {
leftListView.getSelectionModel().clearSelection();
lefts.remove(item);
rights.add(item);
}
}
});
Button sendLeftButton = new Button("<");
sendLeftButton.setOnAction(new EventHandler<ActionEvent>() {
public void handle(ActionEvent event) {
String item =
rightListView.getSelectionModel().getSelectedItem();
Predavanje br. 12 34
JavaFX: ListView
if (item != null) {
rightListView.getSelectionModel().clearSelection();
rights.remove(item);
lefts.add(item);
}
}
});
VBox vbox = new VBox(5);
vbox.getChildren().addAll(sendRightButton,sendLeftButton);
gridpane.add(vbox, 1, 1);
root.getChildren().add(gridpane);
primaryStage.setScene(scene);
primaryStage.show();
}
}
Predavanje br. 12 35
JavaFX: TableView
• Za podatke koji se unose u TableView neka je data jednostavna klasa:
public class Movie {
private String title;
private int year;
private double price;
public Movie() {
this.title = "";
this.year = 0;
this.price = 0.0;
}
public Movie(String title, int year, double price) {
this.title = title;
this.year = year;
this.price = price;
}
public String getTitle() { return this.title; }
public void setTitle(String title) { this.title = title; }
public int getYear() { return this.year; }
public void setYear(int year) { this.year = year; }
public double getPrice() { return this.price; }
public void setPrice(double price) { this.price = price; }
}
Predavanje br. 12 36
JavaFX: TableView
import javafx.application.*; import javafx.stage.*;
import javafx.scene.*; import javafx.scene.control.*;
import javafx.scene.layout.*; import javafx.scene.text.*;
import javafx.scene.control.cell.*; import javafx.collections.*;
import javafx.geometry.*;
public class MovieInventory extends Application {
public static void main(String[] args) { launch(args); }
@Override
public void start(Stage primaryStage) {
Label lblHeading = new Label("Movie Inventory");
lblHeading.setFont(new Font("Arial", 20));
TableView<Movie> table = new TableView<Movie>();
table.setItems(loadData());
TableColumn<Movie, String> colTitle = new TableColumn("Title");
colTitle.setMinWidth(300);
colTitle.setCellValueFactory(
new PropertyValueFactory<Movie,String>("title"));
TableColumn<Movie, Integer> colYear = new TableColumn("Year");
colYear.setMinWidth(100);
colYear.setCellValueFactory(
new PropertyValueFactory<Movie, Integer>("year"));
TableColumn<Movie, Double> colPrice = new TableColumn("Price");
colPrice.setMinWidth(100);
Predavanje br. 12 37
JavaFX: TableView
colPrice.setCellValueFactory(
new PropertyValueFactory<Movie, Double>("price"));
table.getColumns().addAll(colTitle, colYear, colPrice);
VBox paneMain = new VBox();
paneMain.setSpacing(10);
paneMain.setPadding(new Insets(10, 10, 10, 10));
paneMain.getChildren().addAll(lblHeading, table);
Scene scene = new Scene(paneMain);
primaryStage.setScene(scene);
primaryStage.setTitle("Movie Inventory");
primaryStage.show();
}
public ObservableList<Movie> loadData() {
ObservableList<Movie> data = FXCollections.observableArrayList();
data.add(new Movie("It's a Wonderful Life", 1946, 14.95));
data.add(new Movie("Young Frankenstein", 1974, 16.95));
data.add(new Movie("Star Wars Episode 4", 1976, 17.95));
data.add(new Movie("Glory", 1989, 14.95));
data.add(new Movie("The Invention of Lying", 2009, 18.95));
data.add(new Movie("The King's Speech", 2010, 19.95));
return data;
}
}
Predavanje br. 12 38
JavaFX: TableView
Predavanje br. 12 39
JavaFX: TableView (add,edit,delete)
• Sledi kod koji omogućuje editovanje, dodavanja i brisanje elemenata tabele.
import javafx.application.*; import javafx.stage.*;
import javafx.scene.*; import javafx.scene.control.*;
import javafx.scene.layout.*; import javafx.scene.text.*;
import javafx.event.*; import javafx.scene.control.cell.*;
import javafx.beans.property.*; import javafx.collections.*;
import javafx.geometry.*; import javafx.util.converter.*;
public class MovieInventoryEditor extends Application {
public static void main(String[] args) { launch(args); }
private TableView<Movie> table;
private TextField txtTitle, txtYear, txtPrice;
@Override
public void start(Stage primaryStage) {
Label lblHeading = new Label("Movie Inventory");
lblHeading.setFont(new Font("Arial", 20));
table = new TableView<Movie>();
table.setEditable(true);
table.setItems(loadData());
TableColumn colTitle = new TableColumn("Title");
colTitle.setMinWidth(300);
colTitle.setCellValueFactory(
new PropertyValueFactory<Movie, String>("title"));
colTitle.setCellFactory(TextFieldTableCell.forTableColumn());
Predavanje br. 12 40
JavaFX: TableView (add,edit,delete)
colTitle.setOnEditCommit(e -> colTitle_OnEditCommit(e));
TableColumn colYear = new TableColumn("Year");
colYear.setMinWidth(100);
colYear.setCellValueFactory(
new PropertyValueFactory<Movie, Integer>("year"));
colYear.setCellFactory(
TextFieldTableCell.forTableColumn(new IntegerStringConverter()));
colYear.setOnEditCommit(e -> colYear_OnEditCommit(e));
TableColumn colPrice = new TableColumn("Price");
colPrice.setMinWidth(100);
colPrice.setCellValueFactory(
new PropertyValueFactory<Movie, Double>("price"));
colPrice.setCellFactory(
TextFieldTableCell.forTableColumn(new DoubleStringConverter()));
colPrice.setOnEditCommit(e -> colPrice_OnEditCommit(e));
table.getColumns().addAll(colTitle, colYear, colPrice);
txtTitle = new TextField();
txtTitle.setPromptText("Title");
txtTitle.setMinWidth(100);
txtYear = new TextField();
txtYear.setMaxWidth(100);
txtYear.setPromptText("Year");
Predavanje br. 12 41
JavaFX: TableView (add,edit,delete)
txtPrice = new TextField();
txtPrice.setMaxWidth(100);
txtPrice.setPromptText("Price");
Button btnAdd = new Button("Add");
btnAdd.setMinWidth(60);
btnAdd.setOnAction(e -> btnAdd_Clicked());
Button btnDelete = new Button("Delete");
btnDelete.setMinWidth(60);
btnDelete.setOnAction(e -> btnDelete_Clicked());
HBox paneAdd = new HBox();
paneAdd.setSpacing(8);
paneAdd.getChildren().addAll(txtTitle, txtYear, txtPrice, btnAdd,
btnDelete);
VBox paneMain = new VBox();
paneMain.setSpacing(10);
paneMain.setPadding(new Insets(10, 10, 10, 10));
paneMain.getChildren().addAll(lblHeading, table, paneAdd);
Scene scene = new Scene(paneMain);
primaryStage.setScene(scene);
primaryStage.setTitle("Movie Inventory");
primaryStage.show();
}
Predavanje br. 12 42
JavaFX: TableView (add,edit,delete)
public ObservableList<Movie> loadData() {
ObservableList<Movie> data = FXCollections.observableArrayList();
data.add(new Movie("It's a Wonderful Life", 1946, 14.95));
data.add(new Movie("Young Frankenstein", 1974, 16.95));
data.add(new Movie("Star Wars Episode 4", 1976, 17.95));
data.add(new Movie("The Princess Bride", 1987, 16.95));
data.add(new Movie("Glory", 1989, 14.95));
data.add(new Movie("The Invention of Lying", 2009, 18.95));
data.add(new Movie("The King's Speech", 2010, 19.95));
return data;
}
public void colTitle_OnEditCommit(Event e) {
TableColumn.CellEditEvent<Movie, String> ce;
ce = (TableColumn.CellEditEvent<Movie, String>) e;
Movie m = ce.getRowValue();
m.setTitle(ce.getNewValue());
}
public void colYear_OnEditCommit(Event e) {
TableColumn.CellEditEvent<Movie, Integer> ce;
ce = (TableColumn.CellEditEvent<Movie, Integer>) e;
Movie m = ce.getRowValue();
m.setYear(ce.getNewValue());
}
Predavanje br. 12 43
JavaFX: TableView (add,edit,delete)
public void colPrice_OnEditCommit(Event e) {
TableColumn.CellEditEvent<Movie, Double> ce;
ce = (TableColumn.CellEditEvent<Movie, Double>) e;
Movie m = ce.getRowValue();
m.setPrice(ce.getNewValue());
}
public void btnAdd_Clicked() {
Movie m = new Movie();
m.setTitle(txtTitle.getText());
m.setYear(Integer.parseInt(txtYear.getText()));
m.setPrice(Double.parseDouble(txtPrice.getText()));
table.getItems().add(m);
txtTitle.clear();
txtYear.clear();
txtPrice.clear();
}
public void btnDelete_Clicked() {
ObservableList<Movie> sel, items;
items = table.getItems();
sel = table.getSelectionModel().getSelectedItems();
for (Movie m : sel) items.remove(m);
}
}//za multisel. table.getSelectionModel().setSelectionMode(SelectionMode.MULTIPLE);
Predavanje br. 12 44
JavaFX: TableView (add,edit,delete)
Predavanje br. 12 45
JavaFX project
• Instalirati: najnoviji JDK , u IntelliJ odabrati projekat JavaFX.
• Osnovna ideja je da se ubrza razvoj aplikacije, te da se odvoje elementi modela,
kontrole i izgleda (MVC paradigma).
• Kreiranjem JavaFX projekta potrebno je kreirati stablo kao na slici.
• Main.java sadrži elemente modela.
• Fajl sample.fxml sadrži deklarativni opis izgleda komponenti (scene).
• Controller sadrži kod koji kontroliše reagovanje na komponente pogleda.
• Datoteka example.css ima ulogu da dodeli stilove elementima projekta.
Predavanje br. 12 46
JavaFX project
• Datoteka Main.java
import javafx.application.Application;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.stage.Stage;
public class Main extends Application {
@Override
public void start(Stage primaryStage) throws Exception{
primaryStage.setTitle("Hello World");
Parent root = FXMLLoader.load(getClass().getResource("sample.fxml"));
Scene scena = new Scene(root, 150, 300);
scena.getStylesheets().add(getClass().getResource("example.css").toExtern
alForm());
primaryStage.setScene(scena);
primaryStage.show();
}
public static void main(String[] args) {
launch(args);
}
}
Predavanje br. 12 47
JavaFX project
• Datoteka sample.fxml
<?xml version="1.0" encoding="UTF-8"?>
<?import javafx.scene.control.Button?>
<?import javafx.scene.control.Label?>
<?import javafx.scene.layout.ColumnConstraints?>
<?import javafx.scene.layout.GridPane?>
<?import javafx.scene.layout.RowConstraints?>
<?import javafx.scene.layout.VBox?>
<?import javafx.scene.text.Font?>
<GridPane alignment="center" hgap="10" vgap="10"
xmlns="http://javafx.com/javafx/8.0.121"
xmlns:fx="http://javafx.com/fxml/1" fx:controller="sample.Controller">
<columnConstraints>
<ColumnConstraints />
</columnConstraints>
<rowConstraints>
<RowConstraints />
</rowConstraints>
<children>
<VBox prefHeight="236.0" prefWidth="386.0">
Predavanje br. 12 48
JavaFX project
<children>
<Button fx:id="but" mnemonicParsing="false"
onAction="#dugmeKliknuto" prefHeight="122.0" prefWidth="121.0" style="-
fx-background-color: #0F0;" text="Dugme">
<font>
<Font size="18.0" />
</font>
</Button>
<Label id="lab" fx:id="lab" alignment="CENTER"
prefHeight="102.0" prefWidth="406.0" text="Labela">
<font>
<Font name="System Bold" size="18.0" />
</font>
</Label>
</children>
</VBox>
</children>
</GridPane>
• Datoteka example.css
.root{ -fx-background: rgb(255,127,127); }
#lab { -fx-background: rgb(255,255,127); -fx-font-size: 40px; }
Predavanje br. 12 49
JavaFX project
• Datoteka Controller.java
package sample;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.scene.control.Label;
//import javafx.fxml.Initializable;
//import java.net.URL;
//import java.util.ResourceBundle;
public class Controller { //implements Initializable{
@FXML
private Label lab;
public void dugmeKliknuto(ActionEvent mouseEvent) {
lab.setText("Radi");
}
//@Override
//public void initialize(URL location, ResourceBundle resources) {
//}
}
Predavanje br. 12 50
